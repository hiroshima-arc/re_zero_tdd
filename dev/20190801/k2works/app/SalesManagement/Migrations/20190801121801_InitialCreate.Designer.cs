// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalesManagement.Models;

namespace SalesManagement.Migrations
{
    [DbContext(typeof(SalesContext))]
    [Migration("20190801121801_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SalesManagement.Models.AlternateProducts", b =>
                {
                    b.Property<string>("ProdCode")
                        .HasColumnName("PROD_CODE")
                        .HasMaxLength(16);

                    b.Property<string>("AltProdCode")
                        .HasColumnName("ALT_PROD_CODE")
                        .HasMaxLength(16);

                    b.Property<decimal?>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PRIORITY")
                        .HasColumnType("numeric(2, 0)")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.HasKey("ProdCode", "AltProdCode")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("ALTERNATE_PRODUCTS");
                });

            modelBuilder.Entity("SalesManagement.Models.AutoNumber", b =>
                {
                    b.Property<string>("SlipType")
                        .HasColumnName("SLIP_TYPE")
                        .HasMaxLength(2);

                    b.Property<DateTime>("Yearmonth")
                        .HasColumnName("YEARMONTH")
                        .HasColumnType("datetime");

                    b.Property<decimal>("LastSilpNo")
                        .HasColumnName("LAST_SILP_NO")
                        .HasColumnType("numeric(4, 0)");

                    b.HasKey("SlipType", "Yearmonth")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("AUTO_NUMBER");
                });

            modelBuilder.Entity("SalesManagement.Models.BankAcutMst", b =>
                {
                    b.Property<string>("BankAcutCode")
                        .HasColumnName("BANK_ACUT_CODE")
                        .HasMaxLength(8);

                    b.Property<string>("ABankBlncCode")
                        .HasColumnName("A_BANK_BLNC_CODE")
                        .HasMaxLength(3);

                    b.Property<string>("ABankCode")
                        .HasColumnName("A_BANK_CODE")
                        .HasMaxLength(4);

                    b.Property<string>("ActName")
                        .HasColumnName("ACT_NAME")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("ApplEndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("APPL_END_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('2100/12/31')");

                    b.Property<DateTime?>("ApplStartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("APPL_START_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("BankActType")
                        .HasColumnName("BANK_ACT_TYPE")
                        .HasMaxLength(1);

                    b.Property<string>("DeptCode")
                        .IsRequired()
                        .HasColumnName("DEPT_CODE")
                        .HasMaxLength(5);

                    b.Property<string>("ReciveActName")
                        .HasColumnName("RECIVE_ACT_NAME")
                        .HasMaxLength(30);

                    b.Property<string>("ReciveActNo")
                        .HasColumnName("RECIVE_ACT_NO")
                        .HasMaxLength(12);

                    b.Property<string>("ReciveBankActType")
                        .HasColumnName("RECIVE_BANK_ACT_TYPE")
                        .HasMaxLength(1);

                    b.Property<string>("StartActName")
                        .HasColumnName("START_ACT_NAME")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("START_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatePgm")
                        .HasColumnName("UPDATE_PGM")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatePlgDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_PLG_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.HasKey("BankAcutCode")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("DeptCode", "StartDate");

                    b.ToTable("BANK_ACUT_MST");
                });

            modelBuilder.Entity("SalesManagement.Models.Bom", b =>
                {
                    b.Property<string>("ProdCode")
                        .HasColumnName("PROD_CODE")
                        .HasMaxLength(16);

                    b.Property<string>("BomCode")
                        .IsRequired()
                        .HasColumnName("BOM_CODE")
                        .HasMaxLength(16);

                    b.Property<decimal>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("QUANTITY")
                        .HasColumnType("numeric(4, 0)")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.HasKey("ProdCode")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("BOM");
                });

            modelBuilder.Entity("SalesManagement.Models.CategoryType", b =>
                {
                    b.Property<string>("CategoryTypeCode")
                        .HasColumnName("CATEGORY_TYPE_CODE")
                        .HasMaxLength(2);

                    b.Property<string>("CateTypeName")
                        .HasColumnName("CATE_TYPE_NAME")
                        .HasMaxLength(20);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.HasKey("CategoryTypeCode")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("CATEGORY_TYPE");
                });

            modelBuilder.Entity("SalesManagement.Models.CompanyCategory", b =>
                {
                    b.Property<string>("CompCateCode")
                        .HasColumnName("COMP_CATE_CODE")
                        .HasMaxLength(8);

                    b.Property<string>("CategoryType")
                        .HasColumnName("CATEGORY_TYPE")
                        .HasMaxLength(2);

                    b.Property<string>("CompCateName")
                        .HasColumnName("COMP_CATE_NAME")
                        .HasMaxLength(30);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.HasKey("CompCateCode", "CategoryType")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("CategoryType");

                    b.ToTable("COMPANY_CATEGORY");
                });

            modelBuilder.Entity("SalesManagement.Models.CompanyCategoryGroup", b =>
                {
                    b.Property<string>("CategoryType")
                        .HasColumnName("CATEGORY_TYPE")
                        .HasMaxLength(2);

                    b.Property<string>("CompCode")
                        .HasColumnName("COMP_CODE")
                        .HasMaxLength(8);

                    b.Property<string>("CompCateCode")
                        .HasColumnName("COMP_CATE_CODE")
                        .HasMaxLength(8);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.HasKey("CategoryType", "CompCode", "CompCateCode")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("CompCateCode", "CategoryType");

                    b.ToTable("COMPANY_CATEGORY_GROUP");
                });

            modelBuilder.Entity("SalesManagement.Models.CompanyGroupMst", b =>
                {
                    b.Property<string>("CompGroupCode")
                        .HasColumnName("COMP_GROUP_CODE")
                        .HasMaxLength(4);

                    b.Property<string>("GroupName")
                        .HasColumnName("GROUP_NAME")
                        .HasMaxLength(40);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.HasKey("CompGroupCode")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("COMPANY_GROUP_MST");
                });

            modelBuilder.Entity("SalesManagement.Models.CompanysMst", b =>
                {
                    b.Property<string>("CompCode")
                        .HasColumnName("COMP_CODE")
                        .HasMaxLength(8);

                    b.Property<string>("Address1")
                        .HasColumnName("ADDRESS1")
                        .HasMaxLength(40);

                    b.Property<string>("Address2")
                        .HasColumnName("ADDRESS2")
                        .HasMaxLength(40);

                    b.Property<string>("CompGroupCode")
                        .IsRequired()
                        .HasColumnName("COMP_GROUP_CODE")
                        .HasMaxLength(4);

                    b.Property<string>("CompKana")
                        .HasColumnName("COMP_KANA")
                        .HasMaxLength(40);

                    b.Property<string>("CompName")
                        .IsRequired()
                        .HasColumnName("COMP_NAME")
                        .HasMaxLength(40);

                    b.Property<decimal?>("MaxCredit")
                        .HasColumnName("MAX_CREDIT")
                        .HasColumnType("numeric(10, 0)");

                    b.Property<decimal?>("NoSalesFlg")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NO_SALES_FLG")
                        .HasColumnType("numeric(1, 0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("State")
                        .HasColumnName("STATE")
                        .HasMaxLength(4);

                    b.Property<decimal?>("SupType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SUP_TYPE")
                        .HasColumnType("numeric(1, 0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("TempCreditUp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TEMP_CREDIT_UP")
                        .HasColumnType("numeric(10, 0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.Property<decimal?>("WideUseType")
                        .HasColumnName("WIDE_USE_TYPE")
                        .HasColumnType("numeric(1, 0)");

                    b.Property<string>("ZipCode")
                        .HasColumnName("ZIP_CODE")
                        .HasMaxLength(8);

                    b.HasKey("CompCode")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("COMPANYS_MST");
                });

            modelBuilder.Entity("SalesManagement.Models.Credit", b =>
                {
                    b.Property<string>("CreditNo")
                        .HasColumnName("CREDIT_NO")
                        .HasMaxLength(10);

                    b.Property<string>("BankAcutCode")
                        .HasColumnName("BANK_ACUT_CODE")
                        .HasMaxLength(8);

                    b.Property<string>("CompCode")
                        .IsRequired()
                        .HasColumnName("COMP_CODE")
                        .HasMaxLength(8);

                    b.Property<decimal?>("CompSubNo")
                        .HasColumnName("COMP_SUB_NO")
                        .HasColumnType("numeric(2, 0)");

                    b.Property<DateTime?>("CreditDate")
                        .HasColumnName("CREDIT_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("DeptCode")
                        .IsRequired()
                        .HasColumnName("DEPT_CODE")
                        .HasMaxLength(5);

                    b.Property<decimal?>("PayMethodType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PAY_METHOD_TYPE")
                        .HasColumnType("numeric(1, 0)")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal?>("Received")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RECEIVED")
                        .HasColumnType("numeric(13, 0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("ReceivedAmnt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RECEIVED_AMNT")
                        .HasColumnType("numeric(13, 0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("START_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatePgm")
                        .HasColumnName("UPDATE_PGM")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatePlgDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_PLG_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.HasKey("CreditNo")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("DeptCode", "StartDate");

                    b.ToTable("CREDIT");
                });

            modelBuilder.Entity("SalesManagement.Models.CreditBalance", b =>
                {
                    b.Property<string>("CompCode")
                        .HasColumnName("COMP_CODE")
                        .HasMaxLength(8);

                    b.Property<decimal?>("OrderBalance")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ORDER_BALANCE")
                        .HasColumnType("numeric(13, 0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("PayBalance")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PAY_BALANCE")
                        .HasColumnType("numeric(13, 0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("RecBalance")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REC_BALANCE")
                        .HasColumnType("numeric(13, 0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.HasKey("CompCode")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("CREDIT_BALANCE");
                });

            modelBuilder.Entity("SalesManagement.Models.CustomersMst", b =>
                {
                    b.Property<string>("CustCode")
                        .HasColumnName("CUST_CODE")
                        .HasMaxLength(8);

                    b.Property<decimal>("CustSubNo")
                        .HasColumnName("CUST_SUB_NO")
                        .HasColumnType("numeric(2, 0)");

                    b.Property<string>("ArCode")
                        .IsRequired()
                        .HasColumnName("AR_CODE")
                        .HasMaxLength(8);

                    b.Property<decimal?>("ArSubNo")
                        .HasColumnName("AR_SUB_NO")
                        .HasColumnType("numeric(2, 0)");

                    b.Property<string>("CustAddress1")
                        .HasColumnName("CUST_ADDRESS1")
                        .HasMaxLength(40);

                    b.Property<string>("CustAddress2")
                        .HasColumnName("CUST_ADDRESS2")
                        .HasMaxLength(40);

                    b.Property<decimal?>("CustArFlag")
                        .HasColumnName("CUST_AR_FLAG")
                        .HasColumnType("numeric(1, 0)");

                    b.Property<decimal>("CustCloseDate1")
                        .HasColumnName("CUST_CLOSE_DATE1")
                        .HasColumnType("numeric(2, 0)");

                    b.Property<decimal>("CustCloseDate2")
                        .HasColumnName("CUST_CLOSE_DATE2")
                        .HasColumnType("numeric(2, 0)");

                    b.Property<string>("CustEmail")
                        .HasColumnName("CUST_EMAIL")
                        .HasMaxLength(100);

                    b.Property<string>("CustFax")
                        .HasColumnName("CUST_FAX")
                        .HasMaxLength(13);

                    b.Property<string>("CustKana")
                        .HasColumnName("CUST_KANA")
                        .HasMaxLength(40);

                    b.Property<string>("CustName")
                        .IsRequired()
                        .HasColumnName("CUST_NAME")
                        .HasMaxLength(40);

                    b.Property<decimal?>("CustPayDates1")
                        .HasColumnName("CUST_PAY_DATES1")
                        .HasColumnType("numeric(1, 0)");

                    b.Property<decimal?>("CustPayDates2")
                        .HasColumnName("CUST_PAY_DATES2")
                        .HasColumnType("numeric(1, 0)");

                    b.Property<decimal?>("CustPayMethod1")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CUST_PAY_METHOD1")
                        .HasColumnType("numeric(1, 0)")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal?>("CustPayMethod2")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CUST_PAY_METHOD2")
                        .HasColumnType("numeric(1, 0)")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal?>("CustPayMonths1")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CUST_PAY_MONTHS1")
                        .HasColumnType("numeric(1, 0)")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal?>("CustPayMonths2")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CUST_PAY_MONTHS2")
                        .HasColumnType("numeric(1, 0)")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("CustState")
                        .HasColumnName("CUST_STATE")
                        .HasMaxLength(4);

                    b.Property<string>("CustTel")
                        .HasColumnName("CUST_TEL")
                        .HasMaxLength(13);

                    b.Property<decimal?>("CustType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CUST_TYPE")
                        .HasColumnType("numeric(1, 0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("CustUserDepName")
                        .HasColumnName("CUST_USER_DEP_NAME")
                        .HasMaxLength(40);

                    b.Property<string>("CustUserName")
                        .HasColumnName("CUST_USER_NAME")
                        .HasMaxLength(20);

                    b.Property<string>("CustZipCode")
                        .HasColumnName("CUST_ZIP_CODE")
                        .HasMaxLength(8);

                    b.Property<string>("EmpCode")
                        .IsRequired()
                        .HasColumnName("EMP_CODE")
                        .HasMaxLength(10);

                    b.Property<string>("PayerCode")
                        .IsRequired()
                        .HasColumnName("PAYER_CODE")
                        .HasMaxLength(8);

                    b.Property<decimal?>("PayerSubNo")
                        .HasColumnName("PAYER_SUB_NO")
                        .HasColumnType("numeric(2, 0)");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.HasKey("CustCode", "CustSubNo")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("CUSTOMERS_MST");
                });

            modelBuilder.Entity("SalesManagement.Models.DeptMst", b =>
                {
                    b.Property<string>("DeptCode")
                        .HasColumnName("DEPT_CODE")
                        .HasMaxLength(5);

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("START_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DepName")
                        .HasColumnName("DEP_NAME")
                        .HasMaxLength(40);

                    b.Property<DateTime?>("EndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("END_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('2100/12/31')");

                    b.Property<decimal>("Layer")
                        .HasColumnName("LAYER")
                        .HasColumnType("numeric(2, 0)");

                    b.Property<decimal?>("SlitYn")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SLIT_YN")
                        .HasColumnType("numeric(1, 0)")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("UpDivisionCode")
                        .IsRequired()
                        .HasColumnName("UP_DIVISION_CODE")
                        .HasMaxLength(5);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.HasKey("DeptCode", "StartDate")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("DEPT_MST");
                });

            modelBuilder.Entity("SalesManagement.Models.DestinationsMst", b =>
                {
                    b.Property<string>("CompCode")
                        .HasColumnName("COMP_CODE")
                        .HasMaxLength(8);

                    b.Property<decimal>("DistNo")
                        .HasColumnName("DIST_NO")
                        .HasColumnType("numeric(2, 0)");

                    b.Property<decimal>("CompSubNo")
                        .HasColumnName("COMP_SUB_NO")
                        .HasColumnType("numeric(2, 0)");

                    b.Property<string>("Address1")
                        .HasColumnName("ADDRESS1")
                        .HasMaxLength(40);

                    b.Property<string>("Address2")
                        .HasColumnName("ADDRESS2")
                        .HasMaxLength(40);

                    b.Property<string>("DistName")
                        .IsRequired()
                        .HasColumnName("DIST_NAME")
                        .HasMaxLength(40);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.Property<string>("ZipCode")
                        .HasColumnName("ZIP_CODE")
                        .HasMaxLength(8);

                    b.HasKey("CompCode", "DistNo", "CompSubNo")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("DESTINATIONS_MST");
                });

            modelBuilder.Entity("SalesManagement.Models.Employee", b =>
                {
                    b.Property<string>("EmpCode")
                        .HasColumnName("EMP_CODE")
                        .HasMaxLength(10);

                    b.Property<string>("ApprovalCode")
                        .IsRequired()
                        .HasColumnName("APPROVAL_CODE")
                        .HasMaxLength(2);

                    b.Property<string>("DeptCode")
                        .IsRequired()
                        .HasColumnName("DEPT_CODE")
                        .HasMaxLength(5);

                    b.Property<string>("EmpKana")
                        .HasColumnName("EMP_KANA")
                        .HasMaxLength(40);

                    b.Property<string>("EmpName")
                        .HasColumnName("EMP_NAME")
                        .HasMaxLength(20);

                    b.Property<string>("Fax")
                        .HasColumnName("FAX")
                        .HasMaxLength(13);

                    b.Property<string>("LoginPassword")
                        .HasColumnName("LOGIN_PASSWORD")
                        .HasMaxLength(8);

                    b.Property<string>("OccuCode")
                        .IsRequired()
                        .HasColumnName("OCCU_CODE")
                        .HasMaxLength(2);

                    b.Property<DateTime?>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("START_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Tel")
                        .HasColumnName("TEL")
                        .HasMaxLength(13);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.HasKey("EmpCode")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("EMPLOYEE");
                });

            modelBuilder.Entity("SalesManagement.Models.Invoice", b =>
                {
                    b.Property<string>("InvoiceNo")
                        .HasColumnName("INVOICE_NO")
                        .HasMaxLength(10);

                    b.Property<decimal>("CmpTax")
                        .HasColumnName("CMP_TAX")
                        .HasColumnType("numeric(10, 0)");

                    b.Property<string>("CompCode")
                        .IsRequired()
                        .HasColumnName("COMP_CODE")
                        .HasMaxLength(8);

                    b.Property<decimal?>("CustSubNo")
                        .HasColumnName("CUST_SUB_NO")
                        .HasColumnType("numeric(2, 0)");

                    b.Property<decimal?>("InvoiceReceived")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("INVOICE_RECEIVED")
                        .HasColumnType("numeric(13, 0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("InvoicedDate")
                        .HasColumnName("INVOICED_DATE")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("LastReceived")
                        .HasColumnName("LAST_RECEIVED")
                        .HasColumnType("numeric(13, 0)");

                    b.Property<decimal?>("MonthInvoice")
                        .HasColumnName("MONTH_INVOICE")
                        .HasColumnType("numeric(13, 0)");

                    b.Property<decimal?>("MonthReceived")
                        .HasColumnName("MONTH_RECEIVED")
                        .HasColumnType("numeric(13, 0)");

                    b.Property<decimal?>("MonthSales")
                        .HasColumnName("MONTH_SALES")
                        .HasColumnType("numeric(13, 0)");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.HasKey("InvoiceNo")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("INVOICE");
                });

            modelBuilder.Entity("SalesManagement.Models.InvoiceDetails", b =>
                {
                    b.Property<string>("InvoiceNo")
                        .HasColumnName("INVOICE_NO")
                        .HasMaxLength(10);

                    b.Property<string>("SalesNo")
                        .HasColumnName("SALES_NO")
                        .HasMaxLength(10);

                    b.Property<decimal>("RowNo")
                        .HasColumnName("ROW_NO")
                        .HasColumnType("numeric(3, 0)");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.HasKey("InvoiceNo", "SalesNo", "RowNo")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("INVOICE_DETAILS");
                });

            modelBuilder.Entity("SalesManagement.Models.LocationMst", b =>
                {
                    b.Property<string>("WhCode")
                        .HasColumnName("WH_CODE")
                        .HasMaxLength(3);

                    b.Property<string>("LocationCode")
                        .HasColumnName("LOCATION_CODE")
                        .HasMaxLength(4);

                    b.Property<string>("ProdCode")
                        .HasColumnName("PROD_CODE")
                        .HasMaxLength(16);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.HasKey("WhCode", "LocationCode", "ProdCode")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("ProdCode");

                    b.ToTable("LOCATION_MST");
                });

            modelBuilder.Entity("SalesManagement.Models.OrderDetails", b =>
                {
                    b.Property<string>("OrderNo")
                        .HasColumnName("ORDER_NO")
                        .HasMaxLength(10);

                    b.Property<decimal>("SoRowNo")
                        .HasColumnName("SO_ROW_NO")
                        .HasColumnType("numeric(3, 0)");

                    b.Property<decimal?>("CmpTaxRate")
                        .HasColumnName("CMP_TAX_RATE")
                        .HasColumnType("numeric(3, 0)");

                    b.Property<decimal>("CompleteFlg")
                        .HasColumnName("COMPLETE_FLG")
                        .HasColumnType("numeric(1, 0)");

                    b.Property<decimal?>("DeliveredQty")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELIVERED_QTY")
                        .HasColumnType("numeric(4, 0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnName("DELIVERY_DATE")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("DeliveryOrderQty")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELIVERY_ORDER_QTY")
                        .HasColumnType("numeric(4, 0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal>("Discount")
                        .HasColumnName("DISCOUNT")
                        .HasColumnType("numeric(4, 0)");

                    b.Property<string>("ProdCode")
                        .IsRequired()
                        .HasColumnName("PROD_CODE")
                        .HasMaxLength(16);

                    b.Property<string>("ProdName")
                        .IsRequired()
                        .HasColumnName("PROD_NAME")
                        .HasMaxLength(10);

                    b.Property<decimal>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("QUANTITY")
                        .HasColumnType("numeric(4, 0)")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal?>("ReserveQty")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RESERVE_QTY")
                        .HasColumnType("numeric(4, 0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal>("Unitprice")
                        .HasColumnName("UNITPRICE")
                        .HasColumnType("numeric(8, 0)");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.HasKey("OrderNo", "SoRowNo")
                        .HasName("ORDER_DETAILS_PKEY")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("ORDER_DETAILS");
                });

            modelBuilder.Entity("SalesManagement.Models.Orders", b =>
                {
                    b.Property<string>("OrderNo")
                        .HasColumnName("ORDER_NO")
                        .HasMaxLength(10);

                    b.Property<decimal>("CmpTax")
                        .HasColumnName("CMP_TAX")
                        .HasColumnType("numeric(10, 0)");

                    b.Property<string>("CustCode")
                        .IsRequired()
                        .HasColumnName("CUST_CODE")
                        .HasMaxLength(8);

                    b.Property<decimal?>("CustSubNo")
                        .HasColumnName("CUST_SUB_NO")
                        .HasColumnType("numeric(2, 0)");

                    b.Property<string>("CustorderNo")
                        .HasColumnName("CUSTORDER_NO")
                        .HasMaxLength(20);

                    b.Property<string>("DeptCode")
                        .IsRequired()
                        .HasColumnName("DEPT_CODE")
                        .HasMaxLength(5);

                    b.Property<string>("EmpCode")
                        .IsRequired()
                        .HasColumnName("EMP_CODE")
                        .HasMaxLength(10);

                    b.Property<decimal>("OrderAmnt")
                        .HasColumnName("ORDER_AMNT")
                        .HasColumnType("numeric(10, 0)");

                    b.Property<DateTime>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ORDER_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("RequiredDate")
                        .HasColumnName("REQUIRED_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("SlipComment")
                        .HasColumnName("SLIP_COMMENT")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.Property<string>("WhCode")
                        .IsRequired()
                        .HasColumnName("WH_CODE")
                        .HasMaxLength(3);

                    b.HasKey("OrderNo")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("EmpCode");

                    b.HasIndex("WhCode");

                    b.HasIndex("CustCode", "CustSubNo");

                    b.ToTable("ORDERS");
                });

            modelBuilder.Entity("SalesManagement.Models.Pay", b =>
                {
                    b.Property<string>("PayNo")
                        .HasColumnName("PAY_NO")
                        .HasMaxLength(10);

                    b.Property<decimal>("CmpTax")
                        .HasColumnName("CMP_TAX")
                        .HasColumnType("numeric(10, 0)");

                    b.Property<decimal>("CompleteFlg")
                        .HasColumnName("COMPLETE_FLG")
                        .HasColumnType("numeric(1, 0)");

                    b.Property<string>("DeptCode")
                        .IsRequired()
                        .HasColumnName("DEPT_CODE")
                        .HasMaxLength(5);

                    b.Property<decimal?>("PayAmnt")
                        .HasColumnName("PAY_AMNT")
                        .HasColumnType("numeric(13, 0)");

                    b.Property<decimal?>("PayDate")
                        .HasColumnName("PAY_DATE")
                        .HasColumnType("numeric(1, 0)");

                    b.Property<decimal?>("PayMethodType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PAY_METHOD_TYPE")
                        .HasColumnType("numeric(1, 0)")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("START_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("SupCode")
                        .IsRequired()
                        .HasColumnName("SUP_CODE")
                        .HasMaxLength(8);

                    b.Property<decimal?>("SupSubNo")
                        .HasColumnName("SUP_SUB_NO")
                        .HasColumnType("numeric(2, 0)");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.HasKey("PayNo")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("DeptCode", "StartDate");

                    b.HasIndex("SupCode", "SupSubNo");

                    b.ToTable("PAY");
                });

            modelBuilder.Entity("SalesManagement.Models.PoDetails", b =>
                {
                    b.Property<decimal>("PoRowNo")
                        .HasColumnName("PO_ROW_NO")
                        .HasColumnType("numeric(3, 0)");

                    b.Property<string>("PoNo")
                        .HasColumnName("PO_NO")
                        .HasMaxLength(10);

                    b.Property<decimal>("CompleteFlg")
                        .HasColumnName("COMPLETE_FLG")
                        .HasColumnType("numeric(1, 0)");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasColumnName("ORDER_NO")
                        .HasMaxLength(10);

                    b.Property<decimal?>("PoPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PO_PRICE")
                        .HasColumnType("numeric(8, 0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal>("PoQt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PO_QT")
                        .HasColumnType("numeric(4, 0)")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal>("PoRowDspNo")
                        .HasColumnName("PO_ROW_DSP_NO")
                        .HasColumnType("numeric(3, 0)");

                    b.Property<string>("ProdCode")
                        .IsRequired()
                        .HasColumnName("PROD_CODE")
                        .HasMaxLength(16);

                    b.Property<string>("ProdName")
                        .IsRequired()
                        .HasColumnName("PROD_NAME")
                        .HasMaxLength(10);

                    b.Property<decimal>("RecivedQt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RECIVED_QT")
                        .HasColumnType("numeric(4, 0)")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal>("SoRowNo")
                        .HasColumnName("SO_ROW_NO")
                        .HasColumnType("numeric(3, 0)");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.HasKey("PoRowNo", "PoNo")
                        .HasName("PO_DETAILS_PKEY")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("PoNo");

                    b.ToTable("PO_DETAILS");
                });

            modelBuilder.Entity("SalesManagement.Models.Pricebycustomer", b =>
                {
                    b.Property<string>("ProdCode")
                        .HasColumnName("PROD_CODE")
                        .HasMaxLength(16);

                    b.Property<string>("CompCode")
                        .HasColumnName("COMP_CODE")
                        .HasMaxLength(8);

                    b.Property<decimal>("Unitprice")
                        .HasColumnName("UNITPRICE")
                        .HasColumnType("numeric(8, 0)");

                    b.HasKey("ProdCode", "CompCode")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("CompCode");

                    b.ToTable("PRICEBYCUSTOMER");
                });

            modelBuilder.Entity("SalesManagement.Models.ProductCategory", b =>
                {
                    b.Property<string>("CategoryCode")
                        .HasColumnName("CATEGORY_CODE")
                        .HasMaxLength(8);

                    b.Property<decimal>("Layer")
                        .HasColumnName("LAYER")
                        .HasColumnType("numeric(2, 0)");

                    b.Property<string>("ProdCateName")
                        .HasColumnName("PROD_CATE_NAME")
                        .HasMaxLength(30);

                    b.HasKey("CategoryCode")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("PRODUCT_CATEGORY");
                });

            modelBuilder.Entity("SalesManagement.Models.Products", b =>
                {
                    b.Property<string>("ProdCode")
                        .HasColumnName("PROD_CODE")
                        .HasMaxLength(16);

                    b.Property<string>("CategoryCode")
                        .HasColumnName("CATEGORY_CODE")
                        .HasMaxLength(8);

                    b.Property<decimal>("Cost")
                        .HasColumnName("COST")
                        .HasColumnType("numeric(8, 0)");

                    b.Property<decimal?>("PoPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PO_PRICE")
                        .HasColumnType("numeric(8, 0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ProdFullname")
                        .IsRequired()
                        .HasColumnName("PROD_FULLNAME")
                        .HasMaxLength(40);

                    b.Property<string>("ProdKana")
                        .IsRequired()
                        .HasColumnName("PROD_KANA")
                        .HasMaxLength(20);

                    b.Property<string>("ProdName")
                        .IsRequired()
                        .HasColumnName("PROD_NAME")
                        .HasMaxLength(10);

                    b.Property<string>("ProdType")
                        .HasColumnName("PROD_TYPE")
                        .HasMaxLength(1);

                    b.Property<string>("SerialNo")
                        .HasColumnName("SERIAL_NO")
                        .HasMaxLength(40);

                    b.Property<decimal?>("StockManageType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("STOCK_MANAGE_TYPE")
                        .HasColumnType("numeric(1, 0)")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal?>("StockReserveType")
                        .HasColumnName("STOCK_RESERVE_TYPE")
                        .HasColumnType("numeric(1, 0)");

                    b.Property<string>("SupCode")
                        .IsRequired()
                        .HasColumnName("SUP_CODE")
                        .HasMaxLength(8);

                    b.Property<decimal?>("SupSubNo")
                        .HasColumnName("SUP_SUB_NO")
                        .HasColumnType("numeric(2, 0)");

                    b.Property<decimal>("TaxType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TAX_TYPE")
                        .HasColumnType("numeric(1, 0)")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal>("Unitprice")
                        .HasColumnName("UNITPRICE")
                        .HasColumnType("numeric(8, 0)");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.Property<decimal?>("WideUseType")
                        .HasColumnName("WIDE_USE_TYPE")
                        .HasColumnType("numeric(1, 0)");

                    b.HasKey("ProdCode")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("PRODUCTS");
                });

            modelBuilder.Entity("SalesManagement.Models.Pu", b =>
                {
                    b.Property<string>("PuNo")
                        .HasColumnName("PU_NO")
                        .HasMaxLength(10);

                    b.Property<decimal>("CmpTax")
                        .HasColumnName("CMP_TAX")
                        .HasColumnType("numeric(10, 0)");

                    b.Property<string>("DeptCode")
                        .IsRequired()
                        .HasColumnName("DEPT_CODE")
                        .HasMaxLength(5);

                    b.Property<string>("EmpCode")
                        .IsRequired()
                        .HasColumnName("EMP_CODE")
                        .HasMaxLength(10);

                    b.Property<string>("PoNo")
                        .HasColumnName("PO_NO")
                        .HasMaxLength(10);

                    b.Property<decimal?>("PuAmmount")
                        .HasColumnName("PU_AMMOUNT")
                        .HasColumnType("numeric(10, 0)");

                    b.Property<DateTime?>("PuDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PU_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("SlipComment")
                        .HasColumnName("SLIP_COMMENT")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("START_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("SupCode")
                        .IsRequired()
                        .HasColumnName("SUP_CODE")
                        .HasMaxLength(8);

                    b.Property<decimal?>("SupSubNo")
                        .HasColumnName("SUP_SUB_NO")
                        .HasColumnType("numeric(2, 0)");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.HasKey("PuNo")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("EmpCode");

                    b.HasIndex("DeptCode", "StartDate");

                    b.ToTable("PU");
                });

            modelBuilder.Entity("SalesManagement.Models.PuDetails", b =>
                {
                    b.Property<decimal>("PuRowNo")
                        .HasColumnName("PU_ROW_NO")
                        .HasColumnType("numeric(3, 0)");

                    b.Property<string>("PuNo")
                        .HasColumnName("PU_NO")
                        .HasMaxLength(10);

                    b.Property<decimal?>("PoPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PO_PRICE")
                        .HasColumnType("numeric(8, 0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal>("PoRowNo")
                        .HasColumnName("PO_ROW_NO")
                        .HasColumnType("numeric(3, 0)");

                    b.Property<string>("ProdCode")
                        .IsRequired()
                        .HasColumnName("PROD_CODE")
                        .HasMaxLength(16);

                    b.Property<string>("ProdName")
                        .IsRequired()
                        .HasColumnName("PROD_NAME")
                        .HasMaxLength(10);

                    b.Property<decimal>("PuQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PU_QUANTITY")
                        .HasColumnType("numeric(4, 0)")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal>("PuRowDspNo")
                        .HasColumnName("PU_ROW_DSP_NO")
                        .HasColumnType("numeric(3, 0)");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.Property<string>("WhCode")
                        .IsRequired()
                        .HasColumnName("WH_CODE")
                        .HasMaxLength(3);

                    b.HasKey("PuRowNo", "PuNo")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("ProdCode");

                    b.HasIndex("PuNo");

                    b.HasIndex("WhCode");

                    b.ToTable("PU_DETAILS");
                });

            modelBuilder.Entity("SalesManagement.Models.PurchaseOrders", b =>
                {
                    b.Property<string>("PoNo")
                        .HasColumnName("PO_NO")
                        .HasMaxLength(10);

                    b.Property<decimal>("CmpTax")
                        .HasColumnName("CMP_TAX")
                        .HasColumnType("numeric(10, 0)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnName("DUE_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpCode")
                        .IsRequired()
                        .HasColumnName("EMP_CODE")
                        .HasMaxLength(10);

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasColumnName("ORDER_NO")
                        .HasMaxLength(10);

                    b.Property<decimal?>("PoAmnt")
                        .HasColumnName("PO_AMNT")
                        .HasColumnType("numeric(10, 0)");

                    b.Property<DateTime?>("PoDate")
                        .HasColumnName("PO_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("SlipComment")
                        .HasColumnName("SLIP_COMMENT")
                        .HasMaxLength(1000);

                    b.Property<string>("SupCode")
                        .IsRequired()
                        .HasColumnName("SUP_CODE")
                        .HasMaxLength(8);

                    b.Property<decimal?>("SupSubNo")
                        .HasColumnName("SUP_SUB_NO")
                        .HasColumnType("numeric(2, 0)");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.Property<string>("WhCode")
                        .IsRequired()
                        .HasColumnName("WH_CODE")
                        .HasMaxLength(3);

                    b.HasKey("PoNo")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("EmpCode");

                    b.ToTable("PURCHASE_ORDERS");
                });

            modelBuilder.Entity("SalesManagement.Models.Sales", b =>
                {
                    b.Property<string>("SalesNo")
                        .HasColumnName("SALES_NO")
                        .HasMaxLength(10);

                    b.Property<decimal>("CmpTax")
                        .HasColumnName("CMP_TAX")
                        .HasColumnType("numeric(10, 0)");

                    b.Property<string>("CompCode")
                        .IsRequired()
                        .HasColumnName("COMP_CODE")
                        .HasMaxLength(8);

                    b.Property<string>("DeptCode")
                        .IsRequired()
                        .HasColumnName("DEPT_CODE")
                        .HasMaxLength(5);

                    b.Property<string>("EmpCode")
                        .IsRequired()
                        .HasColumnName("EMP_CODE")
                        .HasMaxLength(10);

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasColumnName("ORDER_NO")
                        .HasMaxLength(10);

                    b.Property<string>("OrgnlNo")
                        .HasColumnName("ORGNL_NO")
                        .HasMaxLength(10);

                    b.Property<decimal>("SalesAmnt")
                        .HasColumnName("SALES_AMNT")
                        .HasColumnType("numeric(13, 0)");

                    b.Property<DateTime>("SalesDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SALES_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("SalesType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SALES_TYPE")
                        .HasColumnType("numeric(1, 0)")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("SlipComment")
                        .HasColumnName("SLIP_COMMENT")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("UpdatedNo")
                        .HasColumnName("UPDATED_NO")
                        .HasColumnType("numeric(10, 0)");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.HasKey("SalesNo")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("SALES");
                });

            modelBuilder.Entity("SalesManagement.Models.SalesDetails", b =>
                {
                    b.Property<string>("SalesNo")
                        .HasColumnName("SALES_NO")
                        .HasMaxLength(10);

                    b.Property<decimal>("RowNo")
                        .HasColumnName("ROW_NO")
                        .HasColumnType("numeric(3, 0)");

                    b.Property<DateTime?>("AutoJournalDate")
                        .HasColumnName("AUTO_JOURNAL_DATE")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("DeliveredQty")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELIVERED_QTY")
                        .HasColumnType("numeric(4, 0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal>("Discount")
                        .HasColumnName("DISCOUNT")
                        .HasColumnType("numeric(4, 0)");

                    b.Property<decimal?>("InvoiceDelayType")
                        .HasColumnName("INVOICE_DELAY_TYPE")
                        .HasColumnType("numeric(1, 0)");

                    b.Property<string>("InvoiceNo")
                        .HasColumnName("INVOICE_NO")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("InvoicedDate")
                        .HasColumnName("INVOICED_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("ProdCode")
                        .IsRequired()
                        .HasColumnName("PROD_CODE")
                        .HasMaxLength(16);

                    b.Property<string>("ProdName")
                        .IsRequired()
                        .HasColumnName("PROD_NAME")
                        .HasMaxLength(10);

                    b.Property<decimal>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("QUANTITY")
                        .HasColumnType("numeric(4, 0)")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal>("Unitprice")
                        .HasColumnName("UNITPRICE")
                        .HasColumnType("numeric(8, 0)");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.HasKey("SalesNo", "RowNo")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("SALES_DETAILS");
                });

            modelBuilder.Entity("SalesManagement.Models.Stock", b =>
                {
                    b.Property<string>("WhCode")
                        .HasColumnName("WH_CODE")
                        .HasMaxLength(3);

                    b.Property<string>("ProdCode")
                        .HasColumnName("PROD_CODE")
                        .HasMaxLength(16);

                    b.Property<string>("RotNo")
                        .HasColumnName("ROT_NO")
                        .HasMaxLength(20);

                    b.Property<string>("StockType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("STOCK_TYPE")
                        .HasDefaultValueSql("('1')")
                        .HasMaxLength(1);

                    b.Property<string>("QualityType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("QUALITY_TYPE")
                        .HasDefaultValueSql("('G')")
                        .HasMaxLength(1);

                    b.Property<decimal>("Actual")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTUAL")
                        .HasColumnType("numeric(4, 0)")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastDeliveryDate")
                        .HasColumnName("LAST_DELIVERY_DATE")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.Property<decimal>("Valid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VALID")
                        .HasColumnType("numeric(4, 0)")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("WhCode", "ProdCode", "RotNo", "StockType", "QualityType")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("STOCK");
                });

            modelBuilder.Entity("SalesManagement.Models.SupplierMst", b =>
                {
                    b.Property<string>("SupCode")
                        .HasColumnName("SUP_CODE")
                        .HasMaxLength(8);

                    b.Property<decimal>("SupSubNo")
                        .HasColumnName("SUP_SUB_NO")
                        .HasColumnType("numeric(2, 0)");

                    b.Property<decimal?>("PayMethodType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PAY_METHOD_TYPE")
                        .HasColumnType("numeric(1, 0)")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("SupAddress1")
                        .HasColumnName("SUP_ADDRESS1")
                        .HasMaxLength(40);

                    b.Property<string>("SupAddress2")
                        .HasColumnName("SUP_ADDRESS2")
                        .HasMaxLength(40);

                    b.Property<decimal>("SupCloseDate")
                        .HasColumnName("SUP_CLOSE_DATE")
                        .HasColumnType("numeric(2, 0)");

                    b.Property<string>("SupDepName")
                        .HasColumnName("SUP_DEP_NAME")
                        .HasMaxLength(40);

                    b.Property<string>("SupEmail")
                        .HasColumnName("SUP_EMAIL")
                        .HasMaxLength(100);

                    b.Property<string>("SupEmpName")
                        .HasColumnName("SUP_EMP_NAME")
                        .HasMaxLength(20);

                    b.Property<string>("SupFax")
                        .HasColumnName("SUP_FAX")
                        .HasMaxLength(13);

                    b.Property<string>("SupKana")
                        .HasColumnName("SUP_KANA")
                        .HasMaxLength(40);

                    b.Property<string>("SupName")
                        .IsRequired()
                        .HasColumnName("SUP_NAME")
                        .HasMaxLength(40);

                    b.Property<decimal?>("SupPayDates")
                        .HasColumnName("SUP_PAY_DATES")
                        .HasColumnType("numeric(1, 0)");

                    b.Property<decimal?>("SupPayMonths")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SUP_PAY_MONTHS")
                        .HasColumnType("numeric(1, 0)")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("SupState")
                        .HasColumnName("SUP_STATE")
                        .HasMaxLength(4);

                    b.Property<string>("SupTel")
                        .HasColumnName("SUP_TEL")
                        .HasMaxLength(13);

                    b.Property<string>("SupZipCode")
                        .HasColumnName("SUP_ZIP_CODE")
                        .HasMaxLength(8);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.HasKey("SupCode", "SupSubNo")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("SUPPLIER_MST");
                });

            modelBuilder.Entity("SalesManagement.Models.WhDeptMst", b =>
                {
                    b.Property<string>("WhCode")
                        .HasColumnName("WH_CODE")
                        .HasMaxLength(3);

                    b.Property<string>("DeptCode")
                        .HasColumnName("DEPT_CODE")
                        .HasMaxLength(5);

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("START_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.HasKey("WhCode", "DeptCode", "StartDate")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("DeptCode", "StartDate");

                    b.ToTable("WH_DEPT_MST");
                });

            modelBuilder.Entity("SalesManagement.Models.WhMst", b =>
                {
                    b.Property<string>("WhCode")
                        .HasColumnName("WH_CODE")
                        .HasMaxLength(3);

                    b.Property<string>("Address1")
                        .HasColumnName("ADDRESS1")
                        .HasMaxLength(40);

                    b.Property<string>("Address2")
                        .HasColumnName("ADDRESS2")
                        .HasMaxLength(40);

                    b.Property<string>("State")
                        .HasColumnName("STATE")
                        .HasMaxLength(4);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Updater")
                        .HasColumnName("UPDATER")
                        .HasMaxLength(12);

                    b.Property<string>("WhName")
                        .HasColumnName("WH_NAME")
                        .HasMaxLength(20);

                    b.Property<string>("WhType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WH_TYPE")
                        .HasDefaultValueSql("('N')")
                        .HasMaxLength(1);

                    b.Property<string>("ZipCode")
                        .HasColumnName("ZIP_CODE")
                        .HasMaxLength(8);

                    b.HasKey("WhCode")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("WH_MST");
                });

            modelBuilder.Entity("SalesManagement.Models.BankAcutMst", b =>
                {
                    b.HasOne("SalesManagement.Models.DeptMst", "DeptMst")
                        .WithMany("BankAcutMst")
                        .HasForeignKey("DeptCode", "StartDate")
                        .HasConstraintName("FK_DEPT_MST_BANK_ACUT_MST");
                });

            modelBuilder.Entity("SalesManagement.Models.Bom", b =>
                {
                    b.HasOne("SalesManagement.Models.Products", "ProdCodeNavigation")
                        .WithOne("Bom")
                        .HasForeignKey("SalesManagement.Models.Bom", "ProdCode")
                        .HasConstraintName("FK_PRODUCTS_BOM");
                });

            modelBuilder.Entity("SalesManagement.Models.CompanyCategory", b =>
                {
                    b.HasOne("SalesManagement.Models.CategoryType", "CategoryTypeNavigation")
                        .WithMany("CompanyCategory")
                        .HasForeignKey("CategoryType")
                        .HasConstraintName("FK_CATEGORY_TYPE_COMPANY_CATEG");
                });

            modelBuilder.Entity("SalesManagement.Models.CompanyCategoryGroup", b =>
                {
                    b.HasOne("SalesManagement.Models.CompanyCategory", "C")
                        .WithMany("CompanyCategoryGroup")
                        .HasForeignKey("CompCateCode", "CategoryType")
                        .HasConstraintName("FK_COMPANY_CATEGORY_COMPANY_CA");
                });

            modelBuilder.Entity("SalesManagement.Models.Credit", b =>
                {
                    b.HasOne("SalesManagement.Models.DeptMst", "DeptMst")
                        .WithMany("Credit")
                        .HasForeignKey("DeptCode", "StartDate")
                        .HasConstraintName("FK_DEPT_MST_CREDIT");
                });

            modelBuilder.Entity("SalesManagement.Models.CreditBalance", b =>
                {
                    b.HasOne("SalesManagement.Models.CompanysMst", "CompCodeNavigation")
                        .WithOne("CreditBalance")
                        .HasForeignKey("SalesManagement.Models.CreditBalance", "CompCode")
                        .HasConstraintName("FK_COMPANYS_MST_CREDIT_BALANC");
                });

            modelBuilder.Entity("SalesManagement.Models.CustomersMst", b =>
                {
                    b.HasOne("SalesManagement.Models.CompanysMst", "CustCodeNavigation")
                        .WithMany("CustomersMst")
                        .HasForeignKey("CustCode")
                        .HasConstraintName("FK_COMPANYS_MST_CUSTOMERS_MST");
                });

            modelBuilder.Entity("SalesManagement.Models.InvoiceDetails", b =>
                {
                    b.HasOne("SalesManagement.Models.Invoice", "InvoiceNoNavigation")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceNo")
                        .HasConstraintName("FK_INVOICE_INVOICE_DETAILS");
                });

            modelBuilder.Entity("SalesManagement.Models.LocationMst", b =>
                {
                    b.HasOne("SalesManagement.Models.Products", "ProdCodeNavigation")
                        .WithMany("LocationMst")
                        .HasForeignKey("ProdCode")
                        .HasConstraintName("FK_PRODUCTS_LOCATION_MST");

                    b.HasOne("SalesManagement.Models.WhMst", "WhCodeNavigation")
                        .WithMany("LocationMst")
                        .HasForeignKey("WhCode")
                        .HasConstraintName("FK_WH_MST_LOCATION_MST");
                });

            modelBuilder.Entity("SalesManagement.Models.OrderDetails", b =>
                {
                    b.HasOne("SalesManagement.Models.Orders", "OrderNoNavigation")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderNo")
                        .HasConstraintName("FK_ORDERS_ORDER_DETAILS");
                });

            modelBuilder.Entity("SalesManagement.Models.Orders", b =>
                {
                    b.HasOne("SalesManagement.Models.Employee", "EmpCodeNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("EmpCode")
                        .HasConstraintName("FK_EMPLOYEE_ORDERS");

                    b.HasOne("SalesManagement.Models.WhMst", "WhCodeNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("WhCode")
                        .HasConstraintName("FK_WH_MST_ORDERS");

                    b.HasOne("SalesManagement.Models.CustomersMst", "Cust")
                        .WithMany("Orders")
                        .HasForeignKey("CustCode", "CustSubNo")
                        .HasConstraintName("FK_CUSTOMERS_MST_ORDERS");
                });

            modelBuilder.Entity("SalesManagement.Models.Pay", b =>
                {
                    b.HasOne("SalesManagement.Models.DeptMst", "DeptMst")
                        .WithMany("Pay")
                        .HasForeignKey("DeptCode", "StartDate")
                        .HasConstraintName("FK_DEPT_MST_PAY");

                    b.HasOne("SalesManagement.Models.SupplierMst", "Sup")
                        .WithMany("Pay")
                        .HasForeignKey("SupCode", "SupSubNo")
                        .HasConstraintName("FK_SUPPLIER_MST_PAY");
                });

            modelBuilder.Entity("SalesManagement.Models.PoDetails", b =>
                {
                    b.HasOne("SalesManagement.Models.PurchaseOrders", "PoNoNavigation")
                        .WithMany("PoDetails")
                        .HasForeignKey("PoNo")
                        .HasConstraintName("FK_PURCHASE_ORDERS_PO_DETAILS");
                });

            modelBuilder.Entity("SalesManagement.Models.Pricebycustomer", b =>
                {
                    b.HasOne("SalesManagement.Models.CompanysMst", "CompCodeNavigation")
                        .WithMany("Pricebycustomer")
                        .HasForeignKey("CompCode")
                        .HasConstraintName("FK_COMPANYS_MST_PRICEBYCUSTOME");
                });

            modelBuilder.Entity("SalesManagement.Models.Pu", b =>
                {
                    b.HasOne("SalesManagement.Models.Employee", "EmpCodeNavigation")
                        .WithMany("Pu")
                        .HasForeignKey("EmpCode")
                        .HasConstraintName("FK_EMPLOYEE_PU");

                    b.HasOne("SalesManagement.Models.DeptMst", "DeptMst")
                        .WithMany("Pu")
                        .HasForeignKey("DeptCode", "StartDate")
                        .HasConstraintName("FK_DEPT_MST_PU");
                });

            modelBuilder.Entity("SalesManagement.Models.PuDetails", b =>
                {
                    b.HasOne("SalesManagement.Models.Products", "ProdCodeNavigation")
                        .WithMany("PuDetails")
                        .HasForeignKey("ProdCode")
                        .HasConstraintName("FK_PRODUCTS_PU_DETAILS");

                    b.HasOne("SalesManagement.Models.Pu", "PuNoNavigation")
                        .WithMany("PuDetails")
                        .HasForeignKey("PuNo")
                        .HasConstraintName("FK_PU_PU_DETAILS");

                    b.HasOne("SalesManagement.Models.WhMst", "WhCodeNavigation")
                        .WithMany("PuDetails")
                        .HasForeignKey("WhCode")
                        .HasConstraintName("FK_WH_MST_PU_DETAILS");
                });

            modelBuilder.Entity("SalesManagement.Models.PurchaseOrders", b =>
                {
                    b.HasOne("SalesManagement.Models.Employee", "EmpCodeNavigation")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("EmpCode")
                        .HasConstraintName("FK_EMPLOYEE_PURCHASE_ORDERS");
                });

            modelBuilder.Entity("SalesManagement.Models.SalesDetails", b =>
                {
                    b.HasOne("SalesManagement.Models.Sales", "SalesNoNavigation")
                        .WithMany("SalesDetails")
                        .HasForeignKey("SalesNo")
                        .HasConstraintName("FK_SALES_SALES_DETAILS");
                });

            modelBuilder.Entity("SalesManagement.Models.Stock", b =>
                {
                    b.HasOne("SalesManagement.Models.WhMst", "WhCodeNavigation")
                        .WithMany("Stock")
                        .HasForeignKey("WhCode")
                        .HasConstraintName("FK_WH_MST_STOCK");
                });

            modelBuilder.Entity("SalesManagement.Models.SupplierMst", b =>
                {
                    b.HasOne("SalesManagement.Models.CompanysMst", "SupCodeNavigation")
                        .WithMany("SupplierMst")
                        .HasForeignKey("SupCode")
                        .HasConstraintName("FK_COMPANYS_MST_SUPPLIER_MST");
                });

            modelBuilder.Entity("SalesManagement.Models.WhDeptMst", b =>
                {
                    b.HasOne("SalesManagement.Models.WhMst", "WhCodeNavigation")
                        .WithMany("WhDeptMst")
                        .HasForeignKey("WhCode")
                        .HasConstraintName("FK_WH_MST_WH_DEPT_MST");

                    b.HasOne("SalesManagement.Models.DeptMst", "DeptMst")
                        .WithMany("WhDeptMst")
                        .HasForeignKey("DeptCode", "StartDate")
                        .HasConstraintName("FK_DEPT_MST_WH_DEPT_MST");
                });
#pragma warning restore 612, 618
        }
    }
}
