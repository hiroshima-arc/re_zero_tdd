{
  "name": "k2works",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "config": {
    "app_dir": "app/MvcMovie",
    "api_dir": "api/todo/src/todo",
    "test_dir": "api/todo/test/todo.Tests",
    "s3_bucket": "re-zero-tdd-serverless",
    "stack_name": "todo-dotnet-service",
    "region": "us-east-1",
    "stage": "Development",
    "api_url": ""
  },
  "scripts": {
    "start": "nf start -j Procfile",
    "dev": "nf start -j Procfile-dev",
    "build": "npm-run-all build:*",
    "build:app": "cd $npm_package_config_app_dir; dotnet build",
    "build:backend": "cd $npm_package_config_api_dir; dotnet build",
    "build:doc": "markdown README.md > ./src/readme.html",
    "test": "cd $npm_package_config_test_dir; dotnet test",
    "linter": "cd $npm_package_config_api_dir;",
    "format": "npm-run-all format:*",
    "format:frontend": "prettier --write src/**/*.*",
    "format:backend": "",
    "watch:frontend": "watch 'npm-run-all format:frontend' ./src ",
    "watch:backend": "watch 'npm-run-all test' $npm_package_config_api_dir/",
    "app": "cd $npm_package_config_app_dir; dotnet watch run",
    "app:frontend": "browser-sync start --config bs-config.js",
    "app:backend": "cd $npm_package_config_api_dir; ASPNETCORE_URLS=http://*:4000 dotnet watch run",
    "app:release": "npm-run-all build test dotnet:lambda:deploy",
    "dotnet:lambda:deploy": "cd $npm_package_config_api_dir; dotnet lambda deploy-serverless -sn $npm_package_config_stack_name -sb $npm_package_config_s3_bucket --region $npm_package_config_region",
    "dotnet:lambda:describe": "cd $npm_package_config_api_dir; dotnet lambda list-serverless --region $npm_package_config_region",
    "dotnet:lambda:destroy": "cd $npm_package_config_api_dir; dotnet lambda delete-serverless -sn $npm_package_config_stack_name --region $npm_package_config_region",
    "aws:s3:create": "aws s3 mb s3://$npm_package_config_s3_bucket",
    "aws:s3:destroy": "aws s3 rb s3://$npm_package_config_s3_bucket --force",
    "aws:eb:init": "cd $npm_package_config_app_dir; eb init --profile default",
    "aws:eb:create": "cd $npm_package_config_app_dir; eb create",
    "aws:eb:clean": "cd $npm_package_config_app_dir; rm -rf site; rm *.zip",
    "aws:eb:build": "cd $npm_package_config_app_dir; dotnet restore; dotnet publish -o site",
    "aws:eb:package": "cd $npm_package_config_app_dir; cd site; zip ../site.zip *;cd ..; zip app.zip site.zip aws-windows-deployment-manifest.json ",
    "aws:eb:deploy": "cd $npm_package_config_app_dir; eb deploy",
    "aws:eb:release": "npm-run-all aws:eb:clean aws:eb:build aws:eb:package aws:eb:deploy",
    "aws:eb:destroy": "cd $npm_package_config_app_dir; eb terminate",
    "docker:login": "docker login",
    "docker:app": "npm-run-all docker:app:build docker:app:run",
    "docker:app:build": "cd $npm_package_config_app_dir; docker build -t mvcmovie .",
    "docker:app:run": "cd $npm_package_config_app_dir; docker run -it --rm -p 8000:80 --name MvcMovie mvcmovie",
    "docker:app:destroy": "cd $npm_package_config_app_dir; docker rm -f MvcMovie",
    "docker:api": "npm-run-all docker:api:build docker:api:run",
    "docker:api:build": "cd $npm_package_config_api_dir; docker build -t todo .",
    "docker:api:run": "cd $npm_package_config_api_dir; docker run -it --rm -p 9000:80 --name Todo todo",
    "docker:api:destroy": "cd $npm_package_config_api_dir; docker rm -f MvcMovie",
    "aws:eb:ecs:build": "npm-run-all aws:eb:ecs:*:build",
    "aws:eb:ecs:local": "eb local run",
    "aws:eb:ecs:package": "npm-run-all aws:eb:ecs:*:package",
    "aws:eb:ecs:deploy": "eb deploy",
    "aws:eb:ecs:release": "npm-run-all aws:eb:ecs:build aws:eb:ecs:package aws:eb:ecs:deploy",
    "aws:eb:ecs:destroy": "eb terminate",
    "aws:eb:ecs:app:build": "cd $npm_package_config_app_dir; docker build -t k2works/dotnet-core-mvcmovie .",
    "aws:eb:ecs:app:local": "cd $npm_package_config_app_dir; eb local run",
    "aws:eb:ecs:app:package": "cd $npm_package_config_app_dir; docker push k2works/dotnet-core-mvcmovie",
    "aws:eb:ecs:app:deploy": "npm-run-all aws:eb:ecs:app:package; eb deploy",
    "aws:eb:ecs:api:build": "cd $npm_package_config_api_dir; docker build -t k2works/dotnet-core-todo .",
    "aws:eb:ecs:api:local": "cd $npm_package_config_api_dir; eb local run",
    "aws:eb:ecs:api:package": "cd $npm_package_config_api_dir; docker push k2works/dotnet-core-todo",
    "aws:eb:ecs:api:deploy": "npm-run-all aws:eb:ecs:api:package; docker push k2works/dotnet-core-todo; eb deploy"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "browser-sync": "^2.26.7",
    "connect-browser-sync": "^2.1.0",
    "cpx": "^1.5.0",
    "foreman": "^3.0.1",
    "markdown-to-html": "0.0.13",
    "npm-run-all": "^4.1.5",
    "prettier": "^1.18.2",
    "prettier-plugin-csharp": "^0.6.0-development",
    "rimraf": "^2.6.3",
    "watch": "^1.0.2"
  }
}
