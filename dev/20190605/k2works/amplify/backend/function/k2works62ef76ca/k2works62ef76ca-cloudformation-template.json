{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Lambda resource stack creation using Amplify CLI",
	"Parameters": {
		"env": {
			"Type": "String"
		},
		"authcognitoca545a14UserPoolId": {
			"Type": "String",
			"Default": "authcognitoca545a14UserPoolId"
		},
		"analyticsk2worksId": {
			"Type": "String",
			"Default": "analyticsk2worksId"
		},
		"analyticsk2worksRegion": {
			"Type": "String",
			"Default": "analyticsk2worksRegion"
		},
		"hostingS3AndCloudFrontHostingBucketName": {
			"Type": "String",
			"Default": "hostingS3AndCloudFrontHostingBucketName"
		},
		"apik2worksGraphQLAPIIdOutput": {
			"Type": "String",
			"Default": "apik2worksGraphQLAPIIdOutput"
		}
	},
	"Conditions": {
		"ShouldNotCreateEnvResources": {
			"Fn::Equals": [
				{
					"Ref": "env"
				},
				"NONE"
			]
		}
	},
	"Resources": {
		"LambdaFunction": {
			"Type": "AWS::Lambda::Function",
			"Metadata": {
				"aws:asset:path": "./src",
				"aws:asset:property": "Code"
			},
			"Properties": {
				"Handler": "index.handler",
				"FunctionName": {
					"Fn::If": [
						"ShouldNotCreateEnvResources",
						"k2works62ef76ca",
						{
							"Fn::Join": [
								"",
								[
									"k2works62ef76ca",
									"-",
									{
										"Ref": "env"
									}
								]
							]
						}
					]
				},
				"Environment": {
					"Variables": {
						"ENV": {
							"Ref": "env"
						},
						"REGION": {
							"Ref": "AWS::Region"
						},
						"AUTH_COGNITOCA545A14_USERPOOLID": {
							"Ref": "authcognitoca545a14UserPoolId"
						},
						"ANALYTICS_K2WORKS_ID": {
							"Ref": "analyticsk2worksId"
						},
						"ANALYTICS_K2WORKS_REGION": {
							"Ref": "analyticsk2worksRegion"
						},
						"HOSTING_S3ANDCLOUDFRONT_HOSTINGBUCKETNAME": {
							"Ref": "hostingS3AndCloudFrontHostingBucketName"
						},
						"API_K2WORKS_GRAPHQLAPIIDOUTPUT": {
							"Ref": "apik2worksGraphQLAPIIdOutput"
						}
					}
				},
				"Role": {
					"Fn::GetAtt": [
						"LambdaExecutionRole",
						"Arn"
					]
				},
				"Runtime": "nodejs8.10",
				"Timeout": "25",
				"Code": {
					"S3Bucket": "k2works-dev-20190606104246-deployment",
					"S3Key": "amplify-builds/k2works62ef76ca-1560142445-latest-build.zip"
				}
			}
		},
		"LambdaExecutionRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"RoleName": {
					"Fn::If": [
						"ShouldNotCreateEnvResources",
						"k2worksLambdaRoledf3731a7",
						{
							"Fn::Join": [
								"",
								[
									"k2worksLambdaRoledf3731a7",
									"-",
									{
										"Ref": "env"
									}
								]
							]
						}
					]
				},
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": {
								"Service": [
									"lambda.amazonaws.com"
								]
							},
							"Action": [
								"sts:AssumeRole"
							]
						}
					]
				}
			}
		},
		"lambdaexecutionpolicy": {
			"DependsOn": [
				"LambdaExecutionRole"
			],
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyName": "lambda-execution-policy",
				"Roles": [
					{
						"Ref": "LambdaExecutionRole"
					}
				],
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Action": [
								"logs:CreateLogGroup",
								"logs:CreateLogStream",
								"logs:PutLogEvents"
							],
							"Resource": {
								"Fn::Sub": [
									"arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:log-stream:*",
									{
										"region": {
											"Ref": "AWS::Region"
										},
										"account": {
											"Ref": "AWS::AccountId"
										},
										"lambda": {
											"Ref": "LambdaFunction"
										}
									}
								]
							}
						}
					]
				}
			}
		},
		"AmplifyResourcesPolicy": {
			"DependsOn": [
				"LambdaExecutionRole"
			],
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyName": "amplify-lambda-execution-policy",
				"Roles": [
					{
						"Ref": "LambdaExecutionRole"
					}
				],
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Action": [
								"cognito-idp:ConfirmSignUp",
								"cognito-idp:AdminCreateUser",
								"cognito-idp:CreateUserImportJob",
								"cognito-idp:AdminSetUserSettings",
								"cognito-idp:AdminLinkProviderForUser",
								"cognito-idp:CreateIdentityProvider",
								"cognito-idp:AdminConfirmSignUp",
								"cognito-idp:AdminDisableUser",
								"cognito-idp:AdminRemoveUserFromGroup",
								"cognito-idp:SetUserMFAPreference",
								"cognito-idp:SetUICustomization",
								"cognito-idp:SignUp",
								"cognito-idp:VerifyUserAttribute",
								"cognito-idp:SetRiskConfiguration",
								"cognito-idp:StartUserImportJob",
								"cognito-idp:AdminSetUserPassword",
								"cognito-idp:AssociateSoftwareToken",
								"cognito-idp:CreateResourceServer",
								"cognito-idp:RespondToAuthChallenge",
								"cognito-idp:CreateUserPoolClient",
								"cognito-idp:AdminUserGlobalSignOut",
								"cognito-idp:GlobalSignOut",
								"cognito-idp:AddCustomAttributes",
								"cognito-idp:CreateGroup",
								"cognito-idp:CreateUserPool",
								"cognito-idp:AdminForgetDevice",
								"cognito-idp:AdminAddUserToGroup",
								"cognito-idp:AdminRespondToAuthChallenge",
								"cognito-idp:ForgetDevice",
								"cognito-idp:CreateUserPoolDomain",
								"cognito-idp:AdminEnableUser",
								"cognito-idp:AdminUpdateDeviceStatus",
								"cognito-idp:StopUserImportJob",
								"cognito-idp:InitiateAuth",
								"cognito-idp:AdminInitiateAuth",
								"cognito-idp:AdminSetUserMFAPreference",
								"cognito-idp:ConfirmForgotPassword",
								"cognito-idp:SetUserSettings",
								"cognito-idp:VerifySoftwareToken",
								"cognito-idp:AdminDisableProviderForUser",
								"cognito-idp:SetUserPoolMfaConfig",
								"cognito-idp:ChangePassword",
								"cognito-idp:ConfirmDevice",
								"cognito-idp:AdminResetUserPassword",
								"cognito-idp:ResendConfirmationCode",
								"cognito-identity:Describe*",
								"cognito-identity:Get*",
								"cognito-identity:List*",
								"cognito-idp:Describe*",
								"cognito-idp:AdminGetDevice",
								"cognito-idp:AdminGetUser",
								"cognito-idp:AdminList*",
								"cognito-idp:List*",
								"cognito-sync:Describe*",
								"cognito-sync:Get*",
								"cognito-sync:List*",
								"iam:ListOpenIdConnectProviders",
								"iam:ListRoles",
								"sns:ListPlatformApplications",
								"cognito-idp:ForgotPassword",
								"cognito-idp:UpdateAuthEventFeedback",
								"cognito-idp:UpdateResourceServer",
								"cognito-idp:UpdateUserPoolClient",
								"cognito-idp:AdminUpdateUserAttributes",
								"cognito-idp:UpdateUserAttributes",
								"cognito-idp:UpdateUserPoolDomain",
								"cognito-idp:UpdateIdentityProvider",
								"cognito-idp:UpdateGroup",
								"cognito-idp:AdminUpdateAuthEventFeedback",
								"cognito-idp:UpdateDeviceStatus",
								"cognito-idp:UpdateUserPool",
								"cognito-idp:DeleteUserPoolDomain",
								"cognito-idp:DeleteResourceServer",
								"cognito-idp:DeleteGroup",
								"cognito-idp:AdminDeleteUserAttributes",
								"cognito-idp:DeleteUserPoolClient",
								"cognito-idp:DeleteUserAttributes",
								"cognito-idp:DeleteUserPool",
								"cognito-idp:AdminDeleteUser",
								"cognito-idp:DeleteIdentityProvider",
								"cognito-idp:DeleteUser"
							],
							"Resource": [
								{
									"Fn::Join": [
										"",
										[
											"arn:aws:cognito-idp::",
											{
												"Ref": "AWS::Region"
											},
											":",
											{
												"Ref": "AWS::AccountId"
											},
											":userpool/",
											{
												"Ref": "authcognitoca545a14UserPoolId"
											}
										]
									]
								}
							]
						},
						{
							"Effect": "Allow",
							"Action": [
								"mobiletargeting:Put*",
								"mobiletargeting:Create*",
								"mobiletargeting:Send*",
								"mobiletargeting:Get*",
								"mobiletargeting:List*",
								"mobiletargeting:Update*",
								"mobiletargeting:Delete*"
							],
							"Resource": [
								{
									"Fn::Join": [
										"",
										[
											"arn:aws:mobiletargeting:",
											{
												"Ref": "analyticsk2worksRegion"
											},
											":",
											{
												"Ref": "AWS::AccountId"
											},
											":apps/",
											{
												"Ref": "analyticsk2worksId"
											}
										]
									]
								}
							]
						},
						{
							"Effect": "Allow",
							"Action": [
								"s3:PutObject",
								"s3:GetObject",
								"s3:ListBucket",
								"s3:DeleteObject"
							],
							"Resource": [
								{
									"Fn::Join": [
										"",
										[
											"arn:aws:s3:::",
											{
												"Ref": "hostingS3AndCloudFrontHostingBucketName"
											},
											"/*"
										]
									]
								}
							]
						},
						{
							"Effect": "Allow",
							"Action": [
								"appsync:Create*",
								"appsync:StartSchemaCreation",
								"appsync:GraphQL",
								"appsync:Get*",
								"appsync:List*",
								"appsync:Update*",
								"appsync:Delete*"
							],
							"Resource": [
								{
									"Fn::Join": [
										"",
										[
											"arn:aws:appsync:",
											{
												"Ref": "AWS::Region"
											},
											":",
											{
												"Ref": "AWS::AccountId"
											},
											":apis/",
											{
												"Ref": "apik2worksGraphQLAPIIdOutput"
											}
										]
									]
								}
							]
						}
					]
				}
			}
		}
	},
	"Outputs": {
		"Name": {
			"Value": {
				"Ref": "LambdaFunction"
			}
		},
		"Arn": {
			"Value": {
				"Fn::GetAtt": [
					"LambdaFunction",
					"Arn"
				]
			}
		},
		"Region": {
			"Value": {
				"Ref": "AWS::Region"
			}
		}
	}
}